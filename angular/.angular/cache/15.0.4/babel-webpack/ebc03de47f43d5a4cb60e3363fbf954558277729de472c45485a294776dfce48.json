{"ast":null,"code":"import * as L from \"leaflet\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/place.service\";\nimport * as i2 from \"@angular/common\";\nfunction AllComponent_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const p_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(p_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(p_r1.amenity);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(p_r1.coordinate_x);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(p_r1.coordinate_y);\n  }\n}\nexport class AllComponent {\n  constructor(placeService) {\n    this.placeService = placeService;\n    this.centroid = [41.9981, 21.4254]; //\n  }\n\n  ngOnInit() {\n    this.placeService.getAllBooks().subscribe(data => this.place = data);\n    this.map = L.map('map', {\n      center: this.centroid,\n      zoom: 12\n    });\n    const tiles = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      maxZoom: 18,\n      minZoom: 10,\n      attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\n    });\n    tiles.addTo(this.map);\n    // this.books.forEach(async(books)=>{\n    //\n    // })\n  }\n}\n\nAllComponent.ɵfac = function AllComponent_Factory(t) {\n  return new (t || AllComponent)(i0.ɵɵdirectiveInject(i1.PlaceService));\n};\nAllComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AllComponent,\n  selectors: [[\"app-place\"]],\n  decls: 16,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"]],\n  template: function AllComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\")(1, \"table\")(2, \"thead\")(3, \"tr\")(4, \"th\");\n      i0.ɵɵtext(5, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"th\");\n      i0.ɵɵtext(7, \"Amenity\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"th\");\n      i0.ɵɵtext(9, \"Coordinate X\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\");\n      i0.ɵɵtext(11, \"Coordinate Y\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(12, \"tbody\");\n      i0.ɵɵtemplate(13, AllComponent_tr_13_Template, 9, 4, \"tr\", 0);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"body\");\n      i0.ɵɵelement(15, \"map\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngForOf\", ctx.place);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAIA,OAAO,KAAKA,CAAC,MAAM,SAAS;;;;;;ICQ1BC,0BAA4B;IACtBA,YAAU;IAAAA,iBAAK;IACnBA,0BAAI;IAAAA,YAAa;IAAAA,iBAAK;IACtBA,0BAAI;IAAAA,YAAkB;IAAAA,iBAAK;IAC3BA,0BAAI;IAAAA,YAAkB;IAAAA,iBAAK;;;;IAHvBA,eAAU;IAAVA,+BAAU;IACVA,eAAa;IAAbA,kCAAa;IACbA,eAAkB;IAAlBA,uCAAkB;IAClBA,eAAkB;IAAlBA,uCAAkB;;;ADN1B,OAAM,MAAOC,YAAY;EAOvBC,YAAoBC,YAA0B;IAA1B,iBAAY,GAAZA,YAAY;IAFxB,aAAQ,GAAuB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;EAET;;EAElDC,QAAQ;IACN,IAAI,CAACD,YAAY,CAACE,WAAW,EAAE,CAACC,SAAS,CACtCC,IAAI,IAAK,IAAI,CAACC,KAAK,GAAGD,IAAI,CAE5B;IACD,IAAI,CAACE,GAAG,GAAGV,CAAC,CAACU,GAAG,CAAC,KAAK,EAAE;MACtBC,MAAM,EAAE,IAAI,CAACC,QAAQ;MACrBC,IAAI,EAAE;KACP,CAAC;IACF,MAAMC,KAAK,GAAGd,CAAC,CAACe,SAAS,CAAC,oDAAoD,EAAE;MAC9EC,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE,EAAE;MACXC,WAAW,EAAE;KACd,CAAC;IACFJ,KAAK,CAACK,KAAK,CAAC,IAAI,CAACT,GAAG,CAAC;IAErB;IACA;IACA;EACF;;;AA5BWR,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCTzBvB,4BAAM;MAIEA,oBAAI;MAAAA,iBAAK;MACbA,0BAAI;MAAAA,uBAAO;MAAAA,iBAAK;MAChBA,0BAAI;MAAAA,4BAAY;MAAAA,iBAAK;MACrBA,2BAAI;MAAAA,6BAAY;MAAAA,iBAAK;MAGvBA,8BAAO;MACPA,6DAA4B;MAK5BA,iBAAQ;MAIVA,6BAAM;MACNA,uBAAW;MACXA,iBAAO;;;MAXaA,gBAAQ;MAARA,mCAAQ","names":["L","i0","AllComponent","constructor","placeService","ngOnInit","getAllBooks","subscribe","data","place","map","center","centroid","zoom","tiles","tileLayer","maxZoom","minZoom","attribution","addTo","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Филип\\Desktop\\New folder (4)\\DiAnS\\Домашна 2\\Прототип\\angular\\src\\app\\all\\all.component.ts","C:\\Users\\Филип\\Desktop\\New folder (4)\\DiAnS\\Домашна 2\\Прототип\\angular\\src\\app\\all\\all.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Place } from '../model/place';\nimport { PlaceService } from '../services/place.service';\nimport {MapComponent} from '../map/map.component'\nimport * as L from \"leaflet\";\n@Component({\n  selector: 'app-place',\n  templateUrl: './all.component.html',\n  styleUrls: ['./all.component.css']\n})\nexport class AllComponent implements OnInit {\n\n  // @ts-ignore\n  place: Place[];\n  private map: any;\n  private centroid: L.LatLngExpression = [41.9981, 21.4254]; //\n\n  constructor(private placeService: PlaceService) { }\n\n  ngOnInit(): void {\n    this.placeService.getAllBooks().subscribe(\n      (data) => this.place = data\n\n    );\n    this.map = L.map('map', {\n      center: this.centroid,\n      zoom: 12\n    });\n    const tiles = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      maxZoom: 18,\n      minZoom: 10,\n      attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\n    });\n    tiles.addTo(this.map);\n\n    // this.books.forEach(async(books)=>{\n    //\n    // })\n  }\n\n\n}\n","<!doctype html>\n<html>\n<table>\n  <thead>\n  <tr>\n    <th>Name</th>\n    <th>Amenity</th>\n    <th>Coordinate X</th>\n    <th>Coordinate Y</th>\n  </tr>\n  </thead>\n  <tbody>\n  <tr *ngFor=\"let p of place\">\n    <td>{{p.name}}</td>\n    <td>{{p.amenity}}</td>\n    <td>{{p.coordinate_x}}</td>\n    <td>{{p.coordinate_y}}</td>\n  </tbody>\n\n</table>\n\n<body>\n<map></map>\n</body>\n</html>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}